#! /bin/sh
### BEGIN INIT INFO
# Provides:          genesis
# Required-Start:    $remote_fs $syslog
# Required-Stop:
# Default-Start:     2 3 4 5 S
# Default-Stop:
# Short-Description: clique installation daemon
### END INIT INFO
# Here is /etc/init.d/clique
#
# Copyright 2012-2013 Narantech Inc. All rights reserved.
#  __    _ _______ ______   _______ __    _ _______ _______ _______ __   __
# |  |  | |   _   |    _ | |   _   |  |  | |       |       |       |  | |  |
# |   |_| |  |_|  |   | || |  |_|  |   |_| |_     _|    ___|       |  |_|  |
# |       |       |   |_||_|       |       | |   | |   |___|       |       |
# |  _    |       |    __  |       |  _    | |   | |    ___|      _|       |
# | | |   |   _   |   |  | |   _   | | |   | |   | |   |___|     |_|   _   |
# |_|  |__|__| |__|___|  |_|__| |__|_|  |__| |___| |_______|_______|__| |__|
#
# Clique Installation Daemon.

#------------------------------------------------------------------------------
#                               Consts
#------------------------------------------------------------------------------
ARCH=armhf
PROD=1
CLIQUEDIR=clique
PRESET_SCRIPT_PATH=/var/$CLIQUEDIR/maint/preset/run.sh
PYTHON=$(test -x bin/python && echo bin/python || echo `which python`)

#------------------------------------------------------------------------------
#                               Funtions
#------------------------------------------------------------------------------

do_expand_rootfs() {
  # Get the starting offset of the root partition
  PART_START=$(parted /dev/mmcblk0 -ms unit s p | grep "^2" | cut -f 2 -d:)
  [ "$PART_START" ] || return 1
  # Return value will likely be error for fdisk as it fails to reload the
  # partition table because the root fs is mounted
  fdisk /dev/mmcblk0 <<EOF
p
d
2
n
p
2
$PART_START

p
w
EOF

  # now set up an init.d script
  cat <<\EOF > /etc/init.d/resize2fs_once &&
#!/bin/sh
### BEGIN INIT INFO
# Provides:          resize2fs_once
# Required-Start:
# Required-Stop:
# Default-Start: 2 3 4 5 S
# Default-Stop:
# Short-Description: Resize the root filesystem to fill partition
# Description:
### END INIT INFO

. /lib/lsb/init-functions

case "$1" in
  start)
    log_daemon_msg "Starting resize2fs_once" &&
    resize2fs /dev/mmcblk0p2 &&
    rm /etc/init.d/resize2fs_once &&
    update-rc.d resize2fs_once remove &&
    log_end_msg $?
    ;;
  *)
    echo "Usage: $0 start" >&2
    exit 3
    ;;
esac
EOF
  chmod +x /etc/init.d/resize2fs_once &&
  update-rc.d resize2fs_once defaults
}


set_config_var() {
  touch "$3"
  $PYTHON /var/$CLIQUEDIR/maint/config_var.py "$1" "$2" "$3"
}

set_overclock() {
  set_config_var arm_freq $1 /boot/config.txt &&
  set_config_var core_freq $2 /boot/config.txt &&
  set_config_var sdram_freq $3 /boot/config.txt &&
  set_config_var over_voltage $4 /boot/config.txt
}


setup_system() {
  echo "Configuring CPU and GPU ..."
  # overclock to 1GHz
  set_overclock 1000 500 600 6 &&
  # set GPU memory
  set_config_var gpu_mem_512 "368" /boot/config.txt &&
  set_config_var cma_lwm "16" /boot/config.txt &&
  set_config_var cma_hwm "32" /boot/config.txt &&
  # configure dynamic GPU memory and disable boot log
  if ! [ -f /var/$CLIQUEDIR/.debug ]
  then
    # Product mode
    CONSOLE=tty3
    LOGLEVEL=1
  else
    # Debug mode
    CONSOLE=tty1
    LOGLEVEL=5
  fi
  echo "coherent_pool=6M smsc95xx.turbo_mode=N dwc_otg.lpm_enable=0 console=ttyAMA0,115200 kgdboc=ttyAMA0,115200 console=$CONSOLE loglevel=$LOGLEVEL root=/dev/mmcblk0p2 rootfstype=ext4 elevator=deadline rootwait" > /boot/cmdline.txt &&

  # setting for display
  echo "Configuring display ..."
  sed -i 's/-nolisten tcp//g' /etc/X11/xinit/xserverrc &&

  # expand rootfs
  echo "Configuring file system ..."
  do_expand_rootfs
}


install_clique() {
  echo "Installing clique ..."
  export ARCH=$ARCH
  export PROD=$PROD
  # Install clique thirdparty dependency
  cd /var/$CLIQUEDIR &&
  make install &&
  make brushup &&
  make install_app
  cd $OLDPWD
  echo "Done installing ..."
}


apply_changed_kernel() {
  echo "Applying a changed kernel..."
  depmod -a &&
  mv /etc/modprobe.d/raspi-blacklist.conf /etc/modprobe.d/blacklist.conf &&
  echo "blacklist 8192cu" >> /etc/modprobe.d/blacklist.conf &&
  echo "Done Applying..."
}


backup_iptable() {
  echo "Backup original iptable..."
  sh -c "iptables-save > /etc/iptables.original"
}


pre_setting() {
  if [ -f $PRESET_SCRIPT_PATH ]
  then
    echo "Runs a setting scripts."
    /bin/sh $PRESET_SCRIPT_PATH
  fi
}


cleanup() {
  if ! [ -f /var/$CLIQUEDIR/.debug ]
  then
    echo "Cleaning up unnecessary packages ..."
    apt-get purge -y raspi-config
    apt-get purge -y `dpkg --get-selections | grep "\-dev" | sed s/install//` &&
    echo "Disabling user logins ..."
    # Product mode
    # don't need clique password any more
    usermod --pass='*' clique
    usermod --pass='*' root
    apt-get purge -y ssh make gcc python-setuptools
    apt-get autoremove -y
    # disable the tty1 (prevent from logging in)
    sed -i '/1:2345:respawn:\/sbin\/getty --noclear 38400 tty1/s%^%#%g' /etc/inittab
  fi
  # disable the tty from 2-6
  sed -i '/[2-6]:23:respawn:\/sbin\/getty 38400 tty[2-6]/s%^%#%g' /etc/inittab
  # remove all unused packages
  rm /etc/init.d/genesis
  update-rc.d -f genesis remove
  echo "Removed Genesis scripts ..."
  if ! [ -f /var/$CLIQUEDIR/.debug ]
  then
    echo "Removed clique repositiry ..."
    find /var/$CLIQUEDIR -type f -exec shred -f {} \;
    rm -rf /var/$CLIQUEDIR
  fi
  echo "Completed to clean up noneed packages ..."
}


finish() {
  # Turn on the LED for indication
  echo "Activating done LED."
  echo none > /sys/class/leds/led0/trigger

  while :
  do
    echo 1 > /sys/class/leds/led0/brightness
    sleep 3600
  done
}


failed() {
  echo "Failed to set up the clique platform."
  echo none > /sys/class/leds/led0/trigger

  if [ -d /var/$CLIQUEDIR ]; then
    python /var/$CLIQUEDIR/maint/post_log.py genesis;
  fi

  while :
  do
    echo 1 > /sys/class/leds/led0/brightness
    sleep 1
    echo 0 > /sys/class/leds/led0/brightness
    sleep 1
  done
}


start(){
  echo "Starts to set up for clique ..."
  setup_system &&
  apply_changed_kernel &&
  install_clique &&
  backup_iptable &&
  pre_setting &&
  cleanup &&
  finish || failed
  echo "Completed to set up for clique ..."
}


case "$1" in
  start)
    start
    ;;
  *)
    echo "Invalid usage for clique.d."
    exit 1
    ;;
esac

exit 0

